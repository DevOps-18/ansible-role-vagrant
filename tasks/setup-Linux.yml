---
# tasks file for install Vagrant on Linux system

- name: Linux | Find all versions of Vagrant
  uri:
    url: https://releases.hashicorp.com/vagrant/index.json
    return_content: yes
  register: vagrant_index

- name: Linux | Finds the latest version of Vagrant when latest var is define
  set_fact:
    vagrant_version_to_install: "{{ item }}"
  with_items: "{{ (vagrant_index.content | from_json).versions | list | sort | last }}"
  when: vagrant_version == 'latest'

- name: Linux | Use the specified Vagrant version when latest var is not define
  set_fact:
    vagrant_version_to_install: "{{ vagrant_version }}"
  when: vagrant_version != 'latest'

# This task avoids downloading Vagrant every time
- name: Linux | Check if Vagrant is present with the right version
  command: vagrant --version
  register: vagrant_installed_version
  ignore_errors: yes
  changed_when: false
  failed_when: false

- name: RedHat | Install Vagrant
  package:
    name: "https://releases.hashicorp.com/vagrant/{{ vagrant_version_to_install }}/vagrant_{{ vagrant_version_to_install }}_x86_64.rpm"
    state: present
  when:
    - ansible_os_family == "RedHat"
    - vagrant_version_to_install not in vagrant_installed_version.stdout | default('')

- name: Suse | Install Vagrant
  zypper:
    name: "https://releases.hashicorp.com/vagrant/{{ vagrant_version_to_install }}/vagrant_{{ vagrant_version_to_install }}_x86_64.rpm"
    disable_gpg_check: yes
    state: present
  when:
    - ansible_os_family == "Suse"
    - vagrant_version_to_install not in vagrant_installed_version.stdout | default('')

- name: Debian | Install Vagrant
  apt:
    deb: "https://releases.hashicorp.com/vagrant/{{ vagrant_version_to_install }}/vagrant_{{ vagrant_version_to_install }}_x86_64.deb"
    state: present
  when:
    - ansible_pkg_mgr == "apt"
    - vagrant_version_to_install not in vagrant_installed_version.stdout | default('')

- name: Linux | Install Vagrant with Hashicorp generic package
  unarchive:
    src: "https://releases.hashicorp.com/vagrant/{{ vagrant_version_to_install }}/vagrant_{{ vagrant_version_to_install }}_linux_amd64.zip"
    dest: "{{ vagrant_path }}"
    remote_src: yes
  when:
    - ansible_os_family != "RedHat"
    - ansible_os_family != "Suse"
    - ansible_pkg_mgr != "apt"
    - vagrant_version_to_install not in vagrant_installed_version.stdout | default('')
